(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    244816,       4809]
NotebookOptionsPosition[    243144,       4747]
NotebookOutlinePosition[    243503,       4763]
CellTagsIndexPosition[    243460,       4760]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"NRoots", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HermiteH", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "/.", 
      RowBox[{"n", "\[Rule]", "70"}]}], ",", "x"}], "]"}], ",", "16"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7219964932211604`*^9, 3.7219965523744555`*^9}, {
   3.7220011081034985`*^9, 3.722001108319471*^9}, {3.7220030109997797`*^9, 
   3.722003029488928*^9}, {3.7220033648177786`*^9, 3.722003392344326*^9}, 
   3.722062078804644*^9, {3.722063358789277*^9, 3.7220633848611565`*^9}, 
   3.722065694967038*^9, 3.7220658451892557`*^9, 3.7220660418052487`*^9, 
   3.7220689361019955`*^9, 3.7220722108085318`*^9, 3.722073138118116*^9, 
   3.722081418903942*^9, 3.7220816058396916`*^9, 3.7220848170502334`*^9, 
   3.722085032328679*^9, {3.72208545901747*^9, 3.7220854591036997`*^9}, 
   3.722086944992029*^9, 3.7220870336720543`*^9, {3.722087427328824*^9, 
   3.7220874278721075`*^9}, {3.722088294496535*^9, 3.7220882945602236`*^9}, 
   3.7220883959530725`*^9, 3.7220887240478945`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-11.05524120982711\"\>",
     -11.055241209827114`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-10.43444533665995\"\>",
     -10.434445336659955`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-9.92108909071506\"\>",
     -9.921089090715062,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-9.46346894757677\"\>",
     -9.463468947576773,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-8.68058057230986\"\>",
     -8.680580572309863,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-8.5490306664067\"\>",
     -8.549030666406704,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-8.13474353154769\"\>",
     -8.134743531547691,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-7.831586997177121\"\>",
     -7.831586997177121,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-7.638248704126416\"\>",
     -7.638248704126416,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-7.172700931388546\"\>",
     -7.172700931388546,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-6.923776296928752\"\>",
     -6.923776296928752,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-6.571962625364363\"\>",
     -6.571962625364363,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-6.262056199054249\"\>",
     -6.262056199054249,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-5.942005909382085\"\>",
     -5.942005909382085,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-5.6691780941599\"\>",
     -5.6691780941599,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-5.326000898094306\"\>",
     -5.326000898094306,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-5.111249427550313\"\>",
     -5.111249427550313,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-4.775575978468992\"\>",
     -4.775575978468992,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-4.480609336011923\"\>",
     -4.4806093360119235`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-4.190507190381567\"\>",
     -4.190507190381567,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-3.908210239873206\"\>",
     -3.9082102398732057`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-3.62899625967836\"\>",
     -3.62899625967836,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-3.352152553846209\"\>",
     -3.3521525538462087`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-3.077312419378601\"\>",
     -3.077312419378601,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-2.804233624618675\"\>",
     -2.8042336246186745`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-2.532716616903143\"\>",
     -2.5327166169031425`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-2.262580410717042\"\>",
     -2.2625804107170415`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-1.993654222845786\"\>",
     -1.9936542228457859`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-1.725776475599109\"\>",
     -1.725776475599109,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-1.458793226954092\"\>",
     -1.4587932269540922`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-1.192556856365896\"\>",
     -1.1925568563658961`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-0.926924889706603\"\>",
     -0.926924889706603,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-0.6617589308125673\"\>",
     -0.6617589308125673,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-0.3969236756429885\"\>",
     -0.3969236756429885,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"-0.1322859872703157\"\>",
     -0.13228598727031574`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"0.1322859872703157\"\>",
     0.13228598727031574`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"0.3969236756429883\"\>",
     0.39692367564298825`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"0.6617589308125672\"\>",
     0.6617589308125672,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"0.926924889706579\"\>",
     0.9269248897065792,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"1.192556856365751\"\>",
     1.1925568563657514`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"1.458793226939759\"\>",
     1.4587932269397585`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"1.72577647562053\"\>",
     1.72577647562053,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"1.993654222289319\"\>",
     1.9936542222893185`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"2.262580407827675\"\>",
     2.2625804078276746`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"2.532716600943534\"\>",
     2.532716600943534,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"2.80423403225157\"\>",
     2.80423403225157,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"3.077312102212279\"\>",
     3.0773121022122787`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"3.35215311792798\"\>",
     3.3521531179279798`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"3.629052022257645\"\>",
     3.629052022257645,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"3.908094993947482\"\>",
     3.908094993947482,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"4.192411950615626\"\>",
     4.192411950615626,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"4.475584711633047\"\>",
     4.475584711633047,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"4.774774952435573\"\>",
     4.774774952435573,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"5.078909822329583\"\>",
     5.0789098223295825`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"5.362344049262018\"\>",
     5.362344049262018,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"5.589260518197806\"\>",
     5.589260518197806,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"5.931696590661816\"\>",
     5.931696590661816,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"6.281273917569924\"\>",
     6.281273917569924,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"6.563511741798081\"\>",
     6.563511741798081,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"6.877824923406208\"\>",
     6.877824923406208,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"7.16059851515909\"\>",
     7.16059851515909,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"7.605905602699048\"\>",
     7.605905602699048,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"7.832901311505798\"\>",
     7.832901311505798,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"8.24230435372507\"\>",
     8.242304353725073,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"8.55347311937539\"\>",
     8.553473119375388,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"9.08337174863122\"\>",
     9.08337174863122,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"9.46635149579978\"\>",
     9.466351495799776,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"9.92107867029635\"\>",
     9.921078670296346,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"10.4344541097753\"\>",
     10.434454109775299`,
     AutoDelete->True]}], "||", 
   RowBox[{"x", "\[Equal]", 
    InterpretationBox["\<\"11.05524071298544\"\>",
     11.05524071298544,
     AutoDelete->True]}]}],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{{3.721996508026553*^9, 3.721996553531455*^9}, 
   3.7220011098451805`*^9, 3.722003030731846*^9, 3.7220033655421295`*^9, 
   3.7220033968779926`*^9, 3.7220620792358465`*^9, {3.7220633591477365`*^9, 
   3.7220633860692935`*^9}, 3.7220656953534174`*^9, 3.7220658455564737`*^9, 
   3.7220660422650666`*^9, 3.7220689365730057`*^9, 3.722072211124898*^9, 
   3.7220731383898497`*^9, 3.7220814193512435`*^9, 3.722081607406887*^9, 
   3.722084818114362*^9, 3.722085032983221*^9, 3.722085459617567*^9, 
   3.72208694528242*^9, 3.7220870341997776`*^9, 3.722087428502214*^9, 
   3.7220882951315823`*^9, 3.7220883966743937`*^9, 3.7220887245301657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NRoots", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "30240"}], "+", 
      RowBox[{"302400", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"403200", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"161280", " ", 
       SuperscriptBox["x", "6"]}], "-", 
      RowBox[{"23040", " ", 
       SuperscriptBox["x", "8"]}], "+", 
      RowBox[{"1024", " ", 
       SuperscriptBox["x", "10"]}]}], "1024"], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.4361591188377383`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.5327316742327906`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.7566836492998825`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.0366108297895138`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.3429013272237046`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "0.3429013272237046`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.0366108297895136`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.7566836492998827`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.53273167423279`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.436159118837738`"}]}]], "Output",
 CellChangeTimes->{3.7220011208378973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NRoots", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "64"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "120"}], "+", 
       RowBox[{"720", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"480", " ", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"64", " ", 
        SuperscriptBox["x", "6"]}]}], ")"}]}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.3506049736744923`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.335849074013697`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.43607741192761645`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "0.4360774119276165`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.335849074013697`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.350604973674492`"}]}]], "Output",
 CellChangeTimes->{3.7219999802173476`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoefficientList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HermiteH", "[", 
      RowBox[{"n", ",", "x"}], "]"}], "/", 
     SuperscriptBox["2", "n"]}], "/.", 
    RowBox[{"n", "\[Rule]", "6"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.721996614528592*^9},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["15", "8"]}], ",", "0", ",", 
   FractionBox["45", "4"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["15", "2"]}], ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.721996593777876*^9, 3.7219966157982745`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   FractionBox["1", "64"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "120"}], "+", 
     RowBox[{"720", " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"480", " ", 
      SuperscriptBox["x", "4"]}], "+", 
     RowBox[{"64", " ", 
      SuperscriptBox["x", "6"]}]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["15", "8"]}], "+", 
  FractionBox[
   RowBox[{"45", " ", 
    SuperscriptBox["x", "2"]}], "4"], "-", 
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["x", "4"]}], "2"], "+", 
  SuperscriptBox["x", "6"]}]], "Output",
 CellChangeTimes->{3.7219965634947205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"HermiteH", "[", 
       RowBox[{"n", ",", "6"}], "]"}], "/", 
      SuperscriptBox["2", "n"]}], "/.", 
     RowBox[{"n", "\[Rule]", "200"}]}], "//", "N"}], ",", "16"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.72206173275108*^9, 3.72206195230947*^9, {3.7220619849575973`*^9, 
   3.7220619851016493`*^9}, 3.7220620207092085`*^9, 3.7220622111090393`*^9, {
   3.7220687742471914`*^9, 3.7220687745098476`*^9}, 3.722068870486473*^9, 
   3.72206898752598*^9, {3.722087156288506*^9, 3.722087156760408*^9}, 
   3.7220871994483285`*^9},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"1.74919983144462\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"164\"\>"]}],
   1.74919983144462*^164,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{{3.722061725497137*^9, 3.722061733834551*^9}, 
   3.722061954698412*^9, 3.722061985570964*^9, 3.722062021187034*^9, 
   3.722062211770268*^9, 3.722068775258*^9, 3.7220688707766275`*^9, 
   3.722068987866386*^9, 3.7220871581825113`*^9, 3.7220872001492305`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{
   RowBox[{"-", "1.7974648777477783`*^64"}], ",", "16"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"-1.797464877747778\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"64\"\>"]}],
   -1.7974648777477783`*^64,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.7219968400563173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"4.8447786904296875`*^6", ",", "16"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"4.844778690429687\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"6\"\>"]}],
   4.8447786904296875`*^6,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.721996754129241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HermiteH", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "/", 
      SuperscriptBox["2", "n"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"2", " ", "n"}], ")"}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.721997067792527*^9, 3.721997128071536*^9}, {
   3.7219972109833536`*^9, 3.721997253272993*^9}, 3.7219973498638625`*^9, {
   3.7219974871045837`*^9, 3.721997517902358*^9}, 3.7219977279054594`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFxWswEwAcAPDhlnKXZnRdi6Th0pVU6uSE3ZU5lGguMYt5NpvhuOvkgyxH
zcXJFWLa8srjcnFUs7ByiDxKHmmFlnlMniOHW/XB///hdz8LNt83XJdAIFz6
5/8ia0F+6BbLefsNN59xJs/JZXuN8f3JgzwvOD7JelrLZcK1NQmcBS4X9m4/
UDXFTYbNGfwuJTcTTqfkj05wC2GZXWTxnKgGllAEMbo6DfDbi+6BMYYy2Jao
IccGyOEWrZvUW90Gk+npvi8/dML9bDmJ+PgjzPHUumuz++AuockdWfIn+LJ/
JaWXPgDrZ8nah3cNwhZqupq6NAQzv/jGy1+PwGvKAb6kfBTuZA2kJGUq4KYw
xnLplR9wRkdpzL2iMfhdSUjuzdRx2NZkJJGTNAHXO+wJUfF+wp7PiFu7fZQw
WdzI8KP/gmeUNkFuxydhhSKAX2eoggkc+nma3hRs77QivaXC88TM1b7v0/C+
JoFjaf8MXG4afYJaPwtHkgzHWp+rYQePOJpB1hxsee5hdQ//N+wqjf1cFzoP
N9LS/cTUBThi/rT5ugg3a3FttSIvwuzZY1EkAe4ytsoVbuGWfw55jPKXYPHI
kTTpLF69l9R2PXwZbk64pugexKOLkq/2+azA5tM6kor3eHBWhMb5jAZ21FaU
hb/ATXM87UIsVuEboUQrFhWX2DfvD7TCbYZO6fnZ4GdNKYPuJ3HvsqnbdjQ8
9U1auzYYbxO6NG2y8Z1B67XrYfgDLbdgOQp/coHBU8Xi9T2HjXtT8LXib/rd
qbhj3KPNjrt4q7HBpDwD7/FffNWQjRsdraqpy8EZG2GS2lz8a9GwsDIPN+Pn
pJQX4MGuXoklhXiJ0Q6OWISrJppZoqf4X3Swexs=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 2^Rational[1, 2]}, {0., 1.414213533511594}}, {{
       0, 1.4142135623730951`}, {0., 1.414213533511594}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{{0, 2}, {-0.49999999999999833`, 3.4999998367346956`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 6^Rational[1, 2]}, {-0.7071066132005851, 
       11.022703017696136`}}, {{0, 2.449489742783178}, {-0.7071066132005851, 
       11.022703017696136`}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
qo39H+e7/wE=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 2 2^Rational[1, 2]}, {-1.4999999986957548`, 
       40.74999575510221}}, {{0, 2.8284271247461903`}, {-1.4999999986957548`, 
       40.74999575510221}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xkOqD/rEh8lS67Z4yFti/wM2nmYx
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 10^Rational[1, 2]}, {-4.043323630343138, 
       80.60034865974063}}, {{0, 3.1622776601683795`}, {-4.043323630343138, 
       80.60034865974063}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 2 3^Rational[1, 2]}, {-12.905691442256625`, 
       341.55284019952626`}}, {{
       0, 3.4641016151377544`}, {-12.905691442256625`, 341.55284019952626`}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVlXk8lN8Xx5kZu7GU7IxKtlApKuEeWUYqhIQoa4QKEUrSYgnZvrRIKEsh
kiSEuUWlQray74oKWWbsy29+/zzP6/167v3ccz73nPNsdrpg7kpgYWH5/+P/
71y7hASfa346X7XPKkY3FVW3PM/7FdZgjqbytp1U6oylvbj9adSuwQmF3XxK
ae9Io0kvHHc3avBFlnHzD/w7CmnHdzxS0Gm4gZK6VTRd26tp018w5/6GRBRc
urPsVGsjjXa/JVCj4Qmq+9ig5lLTR8u51r1TvaEYbdE8OZ57c5Jmn3G+5Mm9
GpRXXFFfn7NGm+kD9KqqBq0orq5H9azRwqU2fqkZrkEdd3f8kd+wTitKedM/
sqMWhbxOmV0JXqcRkll45Otq0bJa/rNwBRb87HaiY/7CB9S9b0vGoUUWPONb
yldiU4d+VD2qqo8h4IiXkQ9qr9WhNXfq1lPZBCw5ZSv7PbsOrXf/1u6uImCD
c+v756brkOG+3zL3Jwn4vpuR676oz2i3T22kmCkRa9t1va2s+ILOhMHZLbwk
HGmw5v5BogHlFu74F+3Phs8IpTYI6zag8xrZv6ei2LDe8H419zMN6OaXd2Io
gw2vhfovc79sQE2jfW/ufmHDFyvH75gZNiLn+5X7d0qz41O7u4u7vb+h+49S
l+YwO04RsFtbGGpC+28qSCnTOTDXQl7RY0YTunHClec2OycO7F90MuZsRte2
TGnUi3Li44X3Pj1UaUblvTf/krQ5scCR1nidwGaU+pl2XPsWJw6LMN56i9yC
PM4s1ZaSubD32j4j/n2taPthUvEeXm68n9j+48iRVuSxVyneV5IbEzj9XaMc
WhF/wHZ6rDI3ThZ8eYPtdiu6HT70y+kIN66QVaxa7mxFeb9OF/hFcWPSYTG1
sSttaIE4+02RhQc3mL7B2+LbkLTQ+H59Ph581/K4qXNWG2oNCH14QJIHK55K
8Oqrb0OOJks/8V4ebOLD9bRN6jvKNzYjbD3Hg+/dW5R4R/uOUvQ28+1q5sEO
qffy1lq/o6duAiwCvTxY6bH6fq2x7yhMOCzoyxgPrszzsXoj8AOxlqL85nUe
PFD1O77A8QeSzSvPk1PmxbnvIyh//X+gbvc3gf0avNj307ZChagfKOThyuaL
uryYrdnxa2bxD/QkPbNYyYoXK410sqUQ29GGa/63O67y4tmxgKR2kXbkdbV3
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
hV3elAj/AyOKKc8=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 14^Rational[1, 2]}, {-46.91353297005334, 
       1157.3696493651119`}}, {{0, 3.7416573867739413`}, {-46.91353297005334, 
       1157.3696493651119`}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->{{0, 4}, {-189.49492994115295`, 3916.5680884410394`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
R2CujUfkyp6ygaC+W92JA5H4q/e9gCP5bFBSOledaBmJs7/2NCw/Y4OeWxMi
xccjMco67ohesEHu+f7+e96R+KLO6buNb9mApS6yTySNiHd1Z+ptYwOF3G3H
X05GYocNPwrLOgl/KoNGpxcj8ch9W4e4r2zgSTar38AchRnNUGU8wAYRireY
KvmjMJfC5qsV42ww9KW2/fieKBzXEEFNmGQDx28a58/sj8ICDiu9HtNs4BMS
f8jgcBTeeeen9q4FNnhTtGgRfSIK682WLyUykSG5+IMHNSgK196k5nixkCEz
1F9nIjwKH5LMsD1MJoPKg8MSQTFR+IgNvYyFmwwyAx5pkqlR2Kv8mI+3ABke
bK6us6uIwktmXyTMhMiwqd5vqOxtFL42ZtAmI0oGz8zj74drozB9m4LykAQZ
Tvfb7HvxOQpnXmGaNlcgQ0Bswhj/SBSW4bucTlUmg6yimP3ceBQuzB83paiR
gUOvRDLjTxR+862toEqbDORLb5dOL0Xh/ZeNjt/XJYNUTYGY/0oU/rDxDZcv
EPhDYqcdiY47UbabvCEZ6nYtSoWQ6fhYt6AQhzEZHJqtuus56PiH5+0PPw+R
YarG3biTm45d2VkCqk2J/NQGlsL/6Hg6w293qgUZpJkPJFhtpuPL2pPdftZk
qMzQv4756Xil9VSktS0ZEvf6WS9speMQt04NRTsyeHvxJM1to2N2lkOjnMfJ
sJKU/LFSiI5jH1QljZ4k9LtyhRiJ0PEWNVXDGkcy/LnYpJUqSscPPubMp50h
w3xIakCFGB3vcBbJCnAhw3OVovf3xOk4Z+2ONc2NDE8d7ufBdjpWuMvGouxO
xD+iZeYTuEzhSgm3FxlamvQ1vhFYp/GP4y9vwv+TkqNfCPzOwYm37jIZfm6U
VKcT2Ohvd/VDfzKIKbdksRK45c5hr8BAMsTv5S3fR9SzkXknfiSIDApm+uP7
CD5979Q/q4SQITSIt4qV4OtonxfEE0YG/ZDkF5HCdDw2K6YwEUGGyxyHjJsF
6dg9OqG/nk4GuiHTv08CdFx/Ruim1y0yiJb4PH21hY7F0CMN4VgymOyg9Lvz
0bGfwO7h+jgy7Oahy/3aRMefZ57HeiWSIe+6KVWGh46lm9R1hZPJcKNA3l2J
i46vZ775VZ9ChrjYyPA1Ch0r2zbpCz8kg4BwedgYEx3TFS3/1D8iQ5J+XyzL
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
E/wPqbNIfg==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 3 2^Rational[1, 2]}, {-836.2330155580946, 
       14163.771827970239`}}, {{0, 4.242640687119286}, {-836.2330155580946, 
       14163.771827970239`}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9Ixq1n7M2gLP87snPnadRx0eibMWIRa4YSZSbNR7HgnZbzMuarXAZypeqR68
Oo8qbKQs9S4exI+277KXqJ5HdTufJRnXWWKq2paCarEFRDn8w7JF0Bpvk9L0
apNeQNm8b/J4t1pjQd49Oya3LCDD88anVHWt8ciU83NpjQWk3Ru/Tjlmja+V
3f8cY7aAPqqcrDTItcZtKoJLtEsLSC+6uUpPyQY/l5B/6R2xgGoPvP/vqK4N
zuPWiIy9uoCkti6oOuy3wUGTltwvbi4gXUdhk95TNnhT6XUZ+dIFpFxP9tiW
b4Ndt7Hu/9O9gMyutvw7K2aL38rJhE8PLCAT/s1X+hRsseImg/9+jS2g1o1i
/Ns0bfEU6bzsyPwCIrw8y73voC0OHplY7uJeRALVqcEpl23xj5+c6p0Ci+hM
+Dm2lzdsseG3zR7fRBeRiHwk9eUdW8xaf7zt8+ZFNBHbVWpQYYsTstuK6/UX
kRvjrPyun7b4z53ffbXUReTxLEeJY8wW05K4RV6bMuPf0LpZNGuLxcJNompo
i2h9vvjMaU4aznN8dpTutYj2lj/Z+laNhjlpHcklfovogKPUXkUdGj5jPt9Y
GLyIHvGMhjga0bD6bjXN3OhFFLJts5i2LQ0/F8nhvnN/ERXZZouVBdCwFN9r
6q2cRXTuWpZUcggNX+boDk4pXERx81pre6Jp2GRBaPhG1SIydyyVE7pJw0WT
GuLXni2ixu6ibo17NMw9ZGl9FS8i1ZXz1lLZNNzWFvcy4uMi+nrK2vIYnYa1
mvLnwtqY+09nm1VU0fCd2jdKIZ2L6O/HA8Ofn9HwsYr1W0FDi4iDNtPj30DD
Y/G+3p5ri8j1MkVn3w8aNr+SkHeKyEARM28iGL00TA8p6XInMdC/zpt6fkM0
7O85bOIsyEBfbor+ejtJw+2uxNBjmxhIO17AIXOGhnWOSD8+IsNApZguDfM0
/Nf0sLSdCgP5E07917NCwy4QZGejwUDUVouVrnUarte+ed1Sh4H8uk9df0Cw
wwrbK2oPGDLQ88sSW1RY7XCcwifGfmMGytMjRF9mt8OTkhOq+8wY6L1Hn9t9
Tjt8UIjTzdiKgQoWXkWHk+1wJffme0b2DFSz82uWEpcdFmQzajF0ZCD1qMSg
e9x2eI+P1OOvLgzEQVK6+4rHDvt1r946c5KBKv97dKmC1w5nm34PJpxloFHR
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
ttu8sPlnQbTs3XH4HzSgQv0=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotRange->
     NCache[{{0, 2 5^Rational[1, 2]}, {-3982.289377061068, 
       52425.04744332496}}, {{0, 4.47213595499958}, {-3982.289377061068, 
       52425.04744332496}}],
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7219970869245768`*^9, 3.721997129016634*^9}, 
   3.7219972543702364`*^9, 3.721997350979978*^9, {3.721997489666193*^9, 
   3.7219975188480663`*^9}, 3.721997729177224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"w", " ", "x"}], "]"}], 
    RowBox[{"HermiteH", "[", 
     RowBox[{"n", ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7220017853095555`*^9, 3.7220017868070126`*^9}, {
  3.7220582834867325`*^9, 3.7220583223856583`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"HermiteH\\\", \\\"[\\\", RowBox[{\\\"n\
\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\
\"[\\\", RowBox[{\\\"w\\\", \\\" \\\", \\\"x\\\"}], \
\\\"]\\\"}]}]\\)\[NoBreak] does not converge on \[NoBreak]\\!\\(\\*RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \\\"\
\[Infinity]\\\"}], \\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.722058338304731*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    RowBox[{"HermiteH", "[", 
     RowBox[{"n", ",", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"w", " ", "x"}], "]"}]}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.722058338305232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "NRoots[HermiteH[50,x],x]", 
   Typeset`boxes$$ = RowBox[{"NRoots", "[", 
     RowBox[{
       RowBox[{"HermiteH", "[", 
         RowBox[{"50", ",", " ", "x"}], "]"}], ",", " ", "x"}], "]"}], 
   Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    1.895699`7.7293143744850425, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{170., {7., 18.}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{{3.722058607648391*^9, 3.7220586158689117`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "9.182406957559254`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "8.522771019014826`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.975622271953842`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.486409396846218`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.034320511984507`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "6.608648813620114`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "6.202952789196915`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.812995885832076`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.4357765883547255`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.069116743926591`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "4.711298954359952`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "4.360974020216635`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "4.017068320753065`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.678676942687456`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.345038345406671`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.015497763645927`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.6894847040844345`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.3664939041044883`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.0460719687071327`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.7278065475156748`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.4113177548957807`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.0962511289577697`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.7822717295546042`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.4690590566782369`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.15630254688946868`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "0.15630254688946868`"}], "||", 
  RowBox[{"x", "\[Equal]", "0.4690590566782362`"}], "||", 
  RowBox[{"x", "\[Equal]", "0.7822717295546054`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.0962511289576617`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.411317754898421`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.7278065475127247`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.0460719687045774`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.366493904096003`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.689484705095618`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.015497760885047`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.345038355512873`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.6786769827983785`"}], "||", 
  RowBox[{"x", "\[Equal]", "4.017069079443515`"}], "||", 
  RowBox[{"x", "\[Equal]", "4.360972859260511`"}], "||", 
  RowBox[{"x", "\[Equal]", "4.711294460968122`"}], "||", 
  RowBox[{"x", "\[Equal]", "5.069117660939332`"}], "||", 
  RowBox[{"x", "\[Equal]", "5.435786242297411`"}], "||", 
  RowBox[{"x", "\[Equal]", "5.812985910151491`"}], "||", 
  RowBox[{"x", "\[Equal]", "6.202960878013904`"}], "||", 
  RowBox[{"x", "\[Equal]", "6.608648356715413`"}], "||", 
  RowBox[{"x", "\[Equal]", "7.034322895477847`"}], "||", 
  RowBox[{"x", "\[Equal]", "7.486409605137676`"}], "||", 
  RowBox[{"x", "\[Equal]", "7.9756223261648405`"}], "||", 
  RowBox[{"x", "\[Equal]", "8.52277103944768`"}], "||", 
  RowBox[{"x", "\[Equal]", "9.18240695781835`"}]}]], "Output",
 CellChangeTimes->{3.722058647100359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "NRoots[HermiteH[50,x],x]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "PositiveAlternateForm", "Alternate form assuming x is positive", 1, 1,
         "Input", 
        "FullSimplify[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x > 0]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NRoots[HermiteH[50, x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               TagBox[
                StyleBox[
                "NRoots", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], HoldForm], "[", 
               RowBox[{
                 RowBox[{
                   SubscriptBox["H", "50"], "(", "x", ")"}], ",", "x"}], 
               "]"}], PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "H_n(x) is the nth Hermite polynomial in x"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/HermiteH.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/Polynomials/HermiteH", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HermitePolynomial.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{
                  SubscriptBox["H", "n"], "(", "x", ")"}], "\" \"", 
                "\"is the\"", "\" \"", 
                TagBox[
                 SuperscriptBox["n", "th"], 
                 $CellContext`TagBoxWrapper[
                 "StringBoxes" -> RowBox[{"n", "th"}]]], "\" \"", 
                "\"Hermite polynomial in\"", "\" \"", "x"}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement[
       "moutput", {}, {
        "x == -9.18241 || x == -8.52277 || x == -7.97562 || x == -7.48641 || \
x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || x == \
-5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == -4.01707 \
|| x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 || x == \
-2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == -1.09625 \
|| x == -0.782272 || x == -0.469059 || x == -0.156303 || x == 0.156303 || x \
== 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || x == 1.72781 \
|| x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 || x == \
3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == 4.71129 || x \
== 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x == 6.60865 || \
x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || x == \
9.18241"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "9.182406957855836`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "8.52277102195349`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "7.975622244728897`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "7.486409411727013`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "7.034320727994569`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "6.608650663289449`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "6.202954239650724`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "5.8129979138207775`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "5.4357756441813025`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "5.069114861819603`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "4.711298831154144`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "4.360973957930495`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "4.017068344315202`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "3.678676925238448`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "3.3450383492222224`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "3.0154977681896034`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "2.6894847037816993`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "2.3664939040449773`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "2.046071968707974`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "1.7278065475144335`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "1.4113177548957059`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "1.096251128957772`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "0.7822717295546084`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "0.4690590566782369`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", "0.15630254688946868`"}], Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["0.15630254688946868`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["0.46905905667823616`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["0.7822717295546054`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["1.0962511289576449`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["1.4113177548982683`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["1.7278065475127589`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["2.0460719687066997`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["2.3664939039823456`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["2.6894847067670256`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["3.015497762421823`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["3.3450383561593258`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["3.6786769947673057`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["4.017068931809485`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["4.3609727888776595`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["4.7112943934635645`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["5.069117736008419`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["5.435788262240727`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["5.812985979502999`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["6.2029594787950115`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["6.608648204503522`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["7.034322261467473`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["7.486409523774826`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["7.975622262867507`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["8.522771033691829`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["9.182406956903248`", Identity]}]}], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "e_1\[Or]e_2\[Or]... is the logical OR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{
                  SubscriptBox["e", "1"], "\[Or]", 
                  SubscriptBox["e", "2"], "\[Or]", "\[Ellipsis]"}], "\" \"", 
                "\"is the logical OR function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "Reduce", "id" -> "Plot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max9911$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min9910$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max9911$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1366731$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min9910$\
1366736$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max9911$1366737$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max9911$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min9910$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1366731$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min9910$\
1366736$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max9911$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max9911$\
1366737$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$1366716[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    
                    Or[-9.182406957855836, -8.52277102195349, \
-7.975622244728897, -7.486409411727013, -7.034320727994569, \
-6.608650663289449, -6.202954239650724, -5.8129979138207775`, \
-5.4357756441813025`, -5.069114861819603, -4.711298831154144, \
-4.360973957930495, -4.017068344315202, -3.678676925238448, \
-3.3450383492222224`, -3.0154977681896034`, -2.6894847037816993`, \
-2.3664939040449773`, -2.046071968707974, -1.7278065475144335`, \
-1.4113177548957059`, -1.096251128957772, -0.7822717295546084, \
-0.4690590566782369, -0.15630254688946868`, 0.15630254688946868`, 
                    0.46905905667823616`, 0.7822717295546054, 
                    1.0962511289576449`, 1.4113177548982683`, 
                    1.7278065475127589`, 2.0460719687066997`, 
                    2.3664939039823456`, 2.6894847067670256`, 
                    3.015497762421823, 3.3450383561593258`, 
                    3.6786769947673057`, 4.017068931809485, 
                    4.3609727888776595`, 4.7112943934635645`, 
                    5.069117736008419, 5.435788262240727, 5.812985979502999, 
                    6.2029594787950115`, 6.608648204503522, 7.034322261467473,
                     7.486409523774826, 7.975622262867507, 8.522771033691829, 
                    9.182406956903248], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max9911$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max9911$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max9911$$]], 
                    1]}, ImageSize -> {300.}, PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    AbsoluteThickness[1]]}}, PerformanceGoal -> "Quality"]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min9910$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max9911$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$1366716]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1366716[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1366716[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbikw3t/+\
ARKfkbai8QkJ1rExaUBJyvfeEiexcO1gO9vgz4PPbpJm7SrFdICm9MOpvjSP75577nrPT0SQ9Hu9nr\
ppzAfB4mQLT8+MGYlZLgoevz/PJVGKCp7cwGf3jAmJ3icMfpDY+W4bcyDkDLQ7v8H3gUUFA02+\
asqopkRNDyXkGY1U7RlLemp+MmUiAkZ/khfbw93d1ztDB4OxjEFrIrkatoXMMwmKJD0EumXMHgP+\
zR2flsdPBWMh+\
V4QHhH12HgnEmIDIzgwzMf71uvN1ANMTAOPQcZXTpOV56jtBUpLytMJmeX4xuVkbbcFBpkqx83Dkpt\
1CnLh38EHIrQxOY9N2p4tgX5hXDP6Lsrqn3M3wPPbtvBSnK0mDvN7x5A30PSUqGU6X7auk2Ok6lob/\
Zyrq5ovGw3y8ilT/y8dU6WXw9hpGwaZnZgar9beMvyrtvAix66fi/uRMZ+\
dowRcNRwqwX0UccHmUTRTHjiJtk9X5cbhMO5XfIfo9KlghROYOMt+\
sf3xpAKvN4UQazfdgHR4PQMCkhPjii23+zSlepSBhMgAz6/\
rl002EXUoHne2rz3lMTUDzBGybnlCc5Qs1B10lH35o+\
JWcrnQZMj7EdckJXKt6O9ifaQhl8cT4RlJiBc09erNYZXUGKS37AclSJgDpwhJf5mP/\
eYeLlYCqTqUqC7pWBzY0pz7J9EvC3xMeKqz5o7tObq82xazCcRZrbqAJsnitNkc0/\
0m040bmgPdlwTfkvgP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCTZi/Ff6DV6IuH4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming x is positive", "scanner" -> 
     "Simplification", "id" -> "PositiveAlternateForm", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FullSimplify[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x > 0]"}], 
       XMLElement[
       "moutput", {}, {
        "x == 0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x \
== 1.41132 || x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || \
x == 3.0155 || x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 \
|| x == 4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == \
6.20296 || x == 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x \
== 8.52277 || x == 9.18241"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"x", "\[LongEqual]", 
                TagBox["0.15630254688946868`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["0.46905905667823616`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["0.7822717295546054`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["1.0962511289576449`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["1.4113177548982683`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["1.7278065475127589`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["2.0460719687066997`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["2.3664939039823456`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["2.6894847067670256`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["3.015497762421823`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["3.3450383561593258`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["3.6786769947673057`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["4.017068931809485`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["4.3609727888776595`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["4.7112943934635645`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["5.069117736008419`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["5.435788262240727`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["5.812985979502999`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["6.2029594787950115`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["6.608648204503522`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["7.034322261467473`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["7.486409523774826`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["7.975622262867507`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["8.522771033691829`", Identity]}], "\[Or]", 
              RowBox[{"x", "\[LongEqual]", 
                TagBox["9.182406956903248`", Identity]}]}], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Solutions", "scanner" -> "Reduce", "id" -> "Solution", 
     "position" -> "500", "error" -> "false", "numsubpods" -> "5", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Reduce[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x, Reals]"}], 
       XMLElement["moutput", {}, {"x == -9.18241"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{"x", "\[TildeTilde]", 
                    TagBox[
                    RowBox[{"-", "9.182406957855836`"}], Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Reduce[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x, Reals]"}], 
       XMLElement["moutput", {}, {"x == -8.52277"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{"x", "\[TildeTilde]", 
                    TagBox[
                    RowBox[{"-", "8.52277102195349`"}], Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Reduce[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x, Reals]"}], 
       XMLElement["moutput", {}, {"x == -7.97562"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{"x", "\[TildeTilde]", 
                    TagBox[
                    RowBox[{"-", "7.975622244728897`"}], Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Reduce[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x, Reals]"}], 
       XMLElement["moutput", {}, {"x == -7.48641"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{"x", "\[TildeTilde]", 
                    TagBox[
                    RowBox[{"-", "7.486409411727013`"}], Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Reduce[x == -9.18241 || x == -8.52277 || x == -7.97562 || x == \
-7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 || \
x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x, Reals]"}], 
       XMLElement["moutput", {}, {"x == -7.03432"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{"x", "\[TildeTilde]", 
                    TagBox[
                    RowBox[{"-", "7.034320727994569`"}], Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More solutions", "input" -> 
         "Solution__More solutions"}, {}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "Reduce", "id" -> 
     "NumberLine", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "NumberLinePlot[x == -9.18241 || x == -8.52277 || x == -7.97562 || x \
== -7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == -5.813 \
|| x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || x == \
-4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == -2.68948 \
|| x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 || x == \
-1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x == \
0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 || \
x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == 3.0155 \
|| x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x == \
4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || x \
== 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 || \
x == 9.18241, x]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-9.182406957855836, 0.6060388591870498}]}, 
                   RowBox[{"-", "9.182406957855836`"}]], 
                  Annotation[#, -9.182406957855836, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-8.52277102195349, 0.6060388591870498}]}, 
                   RowBox[{"-", "8.52277102195349`"}]], 
                  Annotation[#, -8.52277102195349, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-7.975622244728897, 0.6060388591870498}]}, 
                   RowBox[{"-", "7.975622244728897`"}]], 
                  Annotation[#, -7.975622244728897, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-7.486409411727013, 0.6060388591870498}]}, 
                   RowBox[{"-", "7.486409411727013`"}]], 
                  Annotation[#, -7.486409411727013, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-7.034320727994569, 0.6060388591870498}]}, 
                   RowBox[{"-", "7.034320727994569`"}]], 
                  Annotation[#, -7.034320727994569, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-6.608650663289449, 0.6060388591870498}]}, 
                   RowBox[{"-", "6.608650663289449`"}]], 
                  Annotation[#, -6.608650663289449, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-6.202954239650724, 0.6060388591870498}]}, 
                   RowBox[{"-", "6.202954239650724`"}]], 
                  Annotation[#, -6.202954239650724, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-5.8129979138207775`, 0.6060388591870498}]}, 
                   RowBox[{"-", "5.8129979138207775`"}]], 
                  Annotation[#, -5.8129979138207775`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-5.4357756441813025`, 0.6060388591870498}]}, 
                   RowBox[{"-", "5.4357756441813025`"}]], 
                  Annotation[#, -5.4357756441813025`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-5.069114861819603, 0.6060388591870498}]}, 
                   RowBox[{"-", "5.069114861819603`"}]], 
                  Annotation[#, -5.069114861819603, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-4.711298831154144, 0.6060388591870498}]}, 
                   RowBox[{"-", "4.711298831154144`"}]], 
                  Annotation[#, -4.711298831154144, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-4.360973957930495, 0.6060388591870498}]}, 
                   RowBox[{"-", "4.360973957930495`"}]], 
                  Annotation[#, -4.360973957930495, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-4.017068344315202, 0.6060388591870498}]}, 
                   RowBox[{"-", "4.017068344315202`"}]], 
                  Annotation[#, -4.017068344315202, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-3.678676925238448, 0.6060388591870498}]}, 
                   RowBox[{"-", "3.678676925238448`"}]], 
                  Annotation[#, -3.678676925238448, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-3.3450383492222224`, 0.6060388591870498}]}, 
                   RowBox[{"-", "3.3450383492222224`"}]], 
                  Annotation[#, -3.3450383492222224`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-3.0154977681896034`, 0.6060388591870498}]}, 
                   RowBox[{"-", "3.0154977681896034`"}]], 
                  Annotation[#, -3.0154977681896034`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-2.6894847037816993`, 0.6060388591870498}]}, 
                   RowBox[{"-", "2.6894847037816993`"}]], 
                  Annotation[#, -2.6894847037816993`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-2.3664939040449773`, 0.6060388591870498}]}, 
                   RowBox[{"-", "2.3664939040449773`"}]], 
                  Annotation[#, -2.3664939040449773`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-2.046071968707974, 0.6060388591870498}]}, 
                   RowBox[{"-", "2.046071968707974`"}]], 
                  Annotation[#, -2.046071968707974, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-1.7278065475144335`, 0.6060388591870498}]}, 
                   RowBox[{"-", "1.7278065475144335`"}]], 
                  Annotation[#, -1.7278065475144335`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-1.4113177548957059`, 0.6060388591870498}]}, 
                   RowBox[{"-", "1.4113177548957059`"}]], 
                  Annotation[#, -1.4113177548957059`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-1.096251128957772, 0.6060388591870498}]}, 
                   RowBox[{"-", "1.096251128957772`"}]], 
                  Annotation[#, -1.096251128957772, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-0.7822717295546084, 0.6060388591870498}]}, 
                   RowBox[{"-", "0.7822717295546084`"}]], 
                  Annotation[#, -0.7822717295546084, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-0.4690590566782369, 0.6060388591870498}]}, 
                   RowBox[{"-", "0.4690590566782369`"}]], 
                  Annotation[#, -0.4690590566782369, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-0.15630254688946868`, 0.6060388591870498}]}, 
                   RowBox[{"-", "0.15630254688946868`"}]], 
                  Annotation[#, -0.15630254688946868`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{0.15630254688946868`, 0.6060388591870498}]}, 
                   "0.15630254688946868`"], 
                  Annotation[#, 0.15630254688946868`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{0.46905905667823616`, 0.6060388591870498}]}, 
                   "0.46905905667823616`"], 
                  Annotation[#, 0.46905905667823616`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{0.7822717295546054, 0.6060388591870498}]}, 
                   "0.7822717295546054`"], 
                  Annotation[#, 0.7822717295546054, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{1.0962511289576449`, 0.6060388591870498}]}, 
                   "1.0962511289576449`"], 
                  Annotation[#, 1.0962511289576449`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{1.4113177548982683`, 0.6060388591870498}]}, 
                   "1.4113177548982683`"], 
                  Annotation[#, 1.4113177548982683`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{1.7278065475127589`, 0.6060388591870498}]}, 
                   "1.7278065475127589`"], 
                  Annotation[#, 1.7278065475127589`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{2.0460719687066997`, 0.6060388591870498}]}, 
                   "2.0460719687066997`"], 
                  Annotation[#, 2.0460719687066997`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{2.3664939039823456`, 0.6060388591870498}]}, 
                   "2.3664939039823456`"], 
                  Annotation[#, 2.3664939039823456`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{2.6894847067670256`, 0.6060388591870498}]}, 
                   "2.6894847067670256`"], 
                  Annotation[#, 2.6894847067670256`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{3.015497762421823, 0.6060388591870498}]}, 
                   "3.015497762421823`"], 
                  Annotation[#, 3.015497762421823, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{3.3450383561593258`, 0.6060388591870498}]}, 
                   "3.3450383561593258`"], 
                  Annotation[#, 3.3450383561593258`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{3.6786769947673057`, 0.6060388591870498}]}, 
                   "3.6786769947673057`"], 
                  Annotation[#, 3.6786769947673057`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{4.017068931809485, 0.6060388591870498}]}, 
                   "4.017068931809485`"], 
                  Annotation[#, 4.017068931809485, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{4.3609727888776595`, 0.6060388591870498}]}, 
                   "4.3609727888776595`"], 
                  Annotation[#, 4.3609727888776595`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{4.7112943934635645`, 0.6060388591870498}]}, 
                   "4.7112943934635645`"], 
                  Annotation[#, 4.7112943934635645`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{5.069117736008419, 0.6060388591870498}]}, 
                   "5.069117736008419`"], 
                  Annotation[#, 5.069117736008419, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{5.435788262240727, 0.6060388591870498}]}, 
                   "5.435788262240727`"], 
                  Annotation[#, 5.435788262240727, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{5.812985979502999, 0.6060388591870498}]}, 
                   "5.812985979502999`"], 
                  Annotation[#, 5.812985979502999, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{6.2029594787950115`, 0.6060388591870498}]}, 
                   "6.2029594787950115`"], 
                  Annotation[#, 6.2029594787950115`, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{6.608648204503522, 0.6060388591870498}]}, 
                   "6.608648204503522`"], 
                  Annotation[#, 6.608648204503522, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{7.034322261467473, 0.6060388591870498}]}, 
                   "7.034322261467473`"], 
                  Annotation[#, 7.034322261467473, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{7.486409523774826, 0.6060388591870498}]}, 
                   "7.486409523774826`"], 
                  Annotation[#, 7.486409523774826, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{7.975622262867507, 0.6060388591870498}]}, 
                   "7.975622262867507`"], 
                  Annotation[#, 7.975622262867507, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{8.522771033691829, 0.6060388591870498}]}, 
                   "8.522771033691829`"], 
                  Annotation[#, 8.522771033691829, "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{9.182406956903248, 0.6060388591870498}]}, 
                   "9.182406956903248`"], 
                  Annotation[#, 9.182406956903248, "Tooltip"]& ]}}, ImageSize -> 
               300., Axes -> {True, False}, AxesStyle -> {}, 
               PlotRange -> {{-10.10064765359379, 10.100647652641204`}, 
                 Automatic}, AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False, False, False, False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.096", 
    "parsetiming" -> "0.41500000000000004", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa15522i9d5bd6260gie10000296cdf95ebc9a1dg", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "54", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa15622i9d5bd6260gie1000022064gediee2ei2h&redisFailed=true&s=54", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2017, 12, 12, 17, 11, 47.1695028`9.426236159464162}, "Line" -> 
    46, "SessionID" -> 15540456030765937557}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "PositiveAlternateForm", "Alternate form assuming x is positive", 1, 1, 
    "Input", "FullSimplify[x == -9.18241 || x == -8.52277 || x == -7.97562 || \
x == -7.48641 || x == -7.03432 || x == -6.60865 || x == -6.20295 || x == \
-5.813 || x == -5.43578 || x == -5.06911 || x == -4.7113 || x == -4.36097 || \
x == -4.01707 || x == -3.67868 || x == -3.34504 || x == -3.0155 || x == \
-2.68948 || x == -2.36649 || x == -2.04607 || x == -1.72781 || x == -1.41132 \
|| x == -1.09625 || x == -0.782272 || x == -0.469059 || x == -0.156303 || x \
== 0.156303 || x == 0.469059 || x == 0.782272 || x == 1.09625 || x == 1.41132 \
|| x == 1.72781 || x == 2.04607 || x == 2.36649 || x == 2.68948 || x == \
3.0155 || x == 3.34504 || x == 3.67868 || x == 4.01707 || x == 4.36097 || x \
== 4.71129 || x == 5.06912 || x == 5.43579 || x == 5.81299 || x == 6.20296 || \
x == 6.60865 || x == 7.03432 || x == 7.48641 || x == 7.97562 || x == 8.52277 \
|| x == 9.18241, x > 0]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "NRoots[HermiteH[50,x],x]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {2657., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "9.182406957559254`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "8.522771019014826`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.975622271953842`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.486409396846218`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "7.034320511984507`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "6.608648813620114`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "6.202952789196915`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.812995885832076`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.4357765883547255`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "5.069116743926591`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "4.711298954359952`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "4.360974020216635`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "4.017068320753065`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.678676942687456`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.345038345406671`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "3.015497763645927`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.6894847040844345`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.3664939041044883`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "2.0460719687071327`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.7278065475156748`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.4113177548957807`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1.0962511289577697`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.7822717295546042`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.4690590566782369`"}]}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "0.15630254688946868`"}]}], "||", 
  RowBox[{"x", "\[Equal]", "0.15630254688946868`"}], "||", 
  RowBox[{"x", "\[Equal]", "0.4690590566782362`"}], "||", 
  RowBox[{"x", "\[Equal]", "0.7822717295546054`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.0962511289576617`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.411317754898421`"}], "||", 
  RowBox[{"x", "\[Equal]", "1.7278065475127247`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.0460719687045774`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.366493904096003`"}], "||", 
  RowBox[{"x", "\[Equal]", "2.689484705095618`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.015497760885047`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.345038355512873`"}], "||", 
  RowBox[{"x", "\[Equal]", "3.6786769827983785`"}], "||", 
  RowBox[{"x", "\[Equal]", "4.017069079443515`"}], "||", 
  RowBox[{"x", "\[Equal]", "4.360972859260511`"}], "||", 
  RowBox[{"x", "\[Equal]", "4.711294460968122`"}], "||", 
  RowBox[{"x", "\[Equal]", "5.069117660939332`"}], "||", 
  RowBox[{"x", "\[Equal]", "5.435786242297411`"}], "||", 
  RowBox[{"x", "\[Equal]", "5.812985910151491`"}], "||", 
  RowBox[{"x", "\[Equal]", "6.202960878013904`"}], "||", 
  RowBox[{"x", "\[Equal]", "6.608648356715413`"}], "||", 
  RowBox[{"x", "\[Equal]", "7.034322895477847`"}], "||", 
  RowBox[{"x", "\[Equal]", "7.486409605137676`"}], "||", 
  RowBox[{"x", "\[Equal]", "7.9756223261648405`"}], "||", 
  RowBox[{"x", "\[Equal]", "8.52277103944768`"}], "||", 
  RowBox[{"x", "\[Equal]", "9.18240695781835`"}]}]], "Output",
 CellChangeTimes->{{3.722058685395323*^9, 3.7220587010451775`*^9}}]
}, Open  ]]
},
WindowSize->{759, 813},
WindowMargins->{{329, Automatic}, {252, Automatic}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (2015\:5e7412\:670810\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1070, 20, 48, "Input"],
Cell[1653, 44, 10413, 292, 539, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12103, 341, 558, 18, 65, "Input"],
Cell[12664, 361, 755, 17, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13456, 383, 464, 16, 62, "Input"],
Cell[13923, 401, 482, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14442, 417, 351, 11, 49, "Input"],
Cell[14796, 430, 300, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15133, 443, 385, 13, 62, "Input"],
Cell[15521, 458, 323, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15881, 474, 659, 17, 49, "Input"],
Cell[16543, 493, 500, 11, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17080, 509, 149, 4, 49, "Input"],
Cell[17232, 515, 269, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17538, 528, 129, 3, 49, "Input"],
Cell[17670, 533, 263, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17970, 546, 688, 18, 49, "Input"],
Cell[18661, 566, 104894, 1837, 543, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123592, 2408, 451, 13, 48, "Input"],
Cell[124046, 2423, 811, 15, 24, "Message"],
Cell[124860, 2440, 365, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125262, 2456, 1273, 29, 42, "Input"],
Cell[126538, 2487, 3464, 77, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130039, 2569, 109596, 2096, 2707, "WolframAlphaShortInput"],
Cell[239638, 4667, 3490, 77, 212, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

